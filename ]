// SERVER

Object._ = function(){} 

var Bricoleur = require('./_brico')
, Precompiler = require('./_pre')
, Mapper = require('./_map')
, Router = require('./_rtr')
, User = require('./_usr')
, http = require('http')
, shoe = require('shoe');

var brico = new Bricoleur({scope:'server'});

var pre = new Precompiler({ // basic layer :: generate an html
  compress:false,
  src:['./__clnt.js'], // js to use 
  dst:'./_wilds/_bundle.min.js', // remove
  srcCSS:'./_wilds/_default.styl', // stylesheet to use
  dstCSS:'./_wilds/_styles.css' // remove
});

var usr = new User(); 

var router = new Router(usr.routes);
var server = http.createServer(router.handleRoutes); 
server.listen(80);

var map = new Mapper('./_wilds');

///
map.client.on('data', pre.handleData); 
map.client.on('end', pre.compile);
map.server.on('data', brico.HandleData);
///

var sock = shoe({log:'error'}, function (stream) { 
  var domain = stream.address.address;
  stream.on('data', function (data) {
    var obj = JSON.parse(data);
    for (key in obj) {
      if (key==='tmpID') {
        var setID = {}
        setID[obj[key]] = stream.id;
        stream.write(JSON.stringify(setID));
        console.dir('binding to '+stream.id);
      }
    }
  });
});

sock.install(server, '/bus');
