(function(window){var Monome=function(){var monome=this;monome.init=function(){var panel=ui.create("panel",{name:"monome",insert:{txtInput:{bind:[{out:["monome","out"]}]},log:{bind:[{"in":["monome","in"]}]}}});panel.init()};monome.out=function(row,min,max,vel){bus.send(["mono","set","skeleton","log",[row,min,max,vel]])}};window.mono=Monome})(window);(function(window){var Skeleton=function(){var skel=this;skel.init=function(){var panel=ui.create("panel",{name:"skeleton",insert:{txtInput:{bind:[{out:["skeleton","interpret"]}]},log:{bind:[{"in":["skeleton","log"]}]}}});panel.init()};skel.interpret=function(cmd){skeleton.log(cmd)}};window.skeleton=Skeleton})(window);(function(window){var UI={create:function(component,settings){var options={};for(property in settings){options[property]={value:settings[property]}}var newObj=Object.create(UI[component],options);return newObj},template:function(name){var template=ui.templates.getElementsByTagName(name)[0];return template.innerHTML},render:function(container,html,cb){var container=document.getElementById(container),tmp=document.createElement("div");tmp.innerHTML=html;while(tmp.firstChild)container.appendChild(tmp.firstChild);cb()},bind:function(bindings,obj){for(var i=0;i<bindings.length;i++){var binding=bindings[i];if(binding.out){obj.output=window[binding.out[0]][binding.out[1]]}if(binding.in){window[binding.in[0]][binding.in[1]]=obj.input}}},panel:{init:function(){var p=this;ui.render("container",ui.template("panel"),function(){var offset_x=0,offset_y=0;var panel=document.querySelector(".panel"),group=document.querySelector(".group");panel.setAttribute("id",p.name);group.setAttribute("id",p.name+"_group");var container=document.getElementById(p.name),panel=container.querySelector(".grip");panel.onmousedown=function(e){e.preventDefault();offset_x=e.clientX-container.offsetLeft;offset_y=e.clientY-container.offsetTop;window.addEventListener("mousemove",startDrag,false);document.body.style.cursor="move"};panel.onmouseup=function(e){document.body.style.cursor="default";stopDrag();return false};function startDrag(e){container.style.left=e.clientX-offset_x+"px";container.style.top=e.clientY-offset_y+"px"}function stopDrag(){window.removeEventListener("mousemove",startDrag,false)}if(p.insert){var components=p.insert;for(component in components){var cmp=ui.create(component,components[component]);cmp.init(p.name+"_group")}}})}},txtInput:{init:function(element){var p=this;ui.render(element,ui.template("txtInput"),function(){if(p.bind)ui.bind(p.bind,p);var cmd=document.getElementById("cmd");cmd.onsubmit=function(e){e.preventDefault();var input=document.getElementById("prompt"),prompt=e.target.prompt.value;input.value="";input.blur();p.output(prompt)}})}},log:{init:function(element){var p=this;ui.render(element,ui.template("log"),function(){if(p.bind)ui.bind(p.bind,p)})},input:function(msg){var date=new Date,time=date.toLocaleTimeString().split(" ")[0],log=document.getElementById("console");log.innerHTML+="<span>"+time+"</span>"+msg+"<br>"}},numBox:{init:function(element){var num=box.querySelector(".number");num.onmousewheel=function(event){var oldVal=parseInt(this.innerHTML),value=event.wheelDeltaY,newVal=null;if(value<0){newVal=oldVal+Math.abs(value)}else{newVal=oldVal-Math.abs(value)}};if(this.bind)ui.bind(this.bind)}}};window.ui=UI})(window);ui.markup="<panel>\n	<div class='panel'>\n		<div class='group'>\n		</div>\n		<div class='grip'>\n		</div>	\n	</div>\n</panel>\n\n<txtInput>\n	<form id='cmd' action='/'>\n		<input type='text' id='prompt' class='txtinput' name='prompt' autocomplete='off'></input>\n		<input type='submit' style='display:none;'></input>\n	</form>\n</txtInput>\n\n<number>\n	<div class='number'>\n	</div>\n</number>\n\n<log>\n	<div id='console'></div>\n</log>";ui.templates=document.createElement("div");ui.templates.innerHTML=ui.markup;