var stream = require('stream')
, browser = false
if (!stream.Writable) browser = true // browser ugliness

function Tele () {
  var self = this

  this.out = new stream()
  this.out.readable = true
  
  this.send = function (data) {
    self.out.emit('data',data)
  }

  if (browser===true) { // very strange browserify hack
    self.in = new stream()
    self.in.writable = true
  }

  if (browser===false) {
    self.in = new stream.Writable()
  }
} 

// output stream (instance of stream) **uses readable = true to trigger streams 1 style
module.exports = function (mod) { // pass in module & make it telepathic!
  var tele = new Tele()
  Object.keys(tele).forEach(function(method) {
    mod[method] = tele[method]
    if (method === 'in') { // handle _write chunks with recv method 
      if (browser===true) {
        mod.in.write = function (chunk) {
          if (!mod.recv) throw new Error('module needs a recv method') 
          mod.recv(chunk)
        }
      }
      if (browser===false) { 
        mod.in._write = function (chunk,encoding,cb) {
          if (!mod.recv) throw new Error('module needs a recv method') 
          mod.recv(chunk)
          cb()
        }
      }
    }
  })
}
