var D = require('browser/mini') // domrender
var asyncMap = require('slide').asyncMap
var through = require('through2')
var utils = require('utils')
var cancel = utils.cancel

module.exports = function Actions (id, template) {

  var library = (!localStorage.library) 
    ? null  // get data from db
    : JSON.parse(localStorage.library)

  var s = through.obj(function Write (d, enc, next) { 
    if (d.to && d.to === id) {
      console.log('omni', d)
    }

    // if (d.key && d.key.split(':')[0] === 'library') {
    //   library = JSON.parse(d.value)
    // }
    
    next()
  })

  // dom
  
  var om = D(document.body, template.get('.omni'), utils.UID('omni'))
  var disp

  om(function (el) {
    console.log(el)
    disp  = D(el.querySelector('.omnibox'), template.get('.result'))
    el.querySelector('#search').addEventListener('keyup', keyInput, false)
  })

  // key interactions
  
  window.addEventListener('keydown', keyMappings, false)
  window.addEventListener('contextmenu', contextMenu, false)
 
  function keyMappings (e) {

  }

  function keyInput (e) {
    e.preventDefault()
    var str = e.target.value

    var res = utils.search(library.master, str)

    if (res) { // set contents for internal action buffer
      disp({name:res.name})
    }
  }
 
  // context interface

  function contextMenu (e) { 
    e.preventDefault()
    var element = e.target
    var id = element.id
    var parent = element.parentElement // ?
    var cl = element.className
    var tag = element.tagName
  }

  // uploading

  function fileUpload (e) {
    e.preventDefault()
    var files = []
    var droppedFiles = e.dataTransfer.files
    var msg = R(messages, '<li id="{{id}}">{{body}}</li>')

    for (var i=0; i<droppedFiles.length; i++) {
      var f = droppedFiles[i]
      if (f.type.match('image.*')) files.push(f)
    }

    asyncMap(files, function handleFile (file, next) {
      var fileName = file.name
      var cleanName = file.name.replace(/ /g,'_')
      var id = utils.UID(cleanName)

      var formData = new FormData()
      formData.append('file', cleanName)

      var xhr = new XMLHttpRequest()
      xhr.upload.addEventListener('progress', function (e) { 
        var percent = (e.loaded / e.total)*100
        msg.draw({id: id, body: 'uploading ' + cleanName +' : '+ percent})
        if (e.loaded === e.total) setTimeout(function () {msg.erase()}, 1000)
      }, false) 
      xhr.open('post', '/upload', true) 

      var reader = new FileReader()

      reader.addEventListener('load', function (data) {
        formData.append('id', id)
        formData.append('blob', data.target.result)
        xhr.send(formData)
        next()
      }, false)

      reader.readAsDataURL(file)
    }, function End () {
      console.dir(droppedFiles)
    })
  }

  return s
}
